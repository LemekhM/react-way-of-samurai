import {usersAPI} from "../api/api";const ADD_POST = 'ADD-POST';const ADD_TEXT = 'ADD-TEXT';const SET_USER_PROFILE = 'SET-USER-PROFILE'let initialState = {    posts: [        {id: 1, message: 'Hello friends', likes: 103},        {id: 2, message: 'Hello everybody', likes: 51},        {id: 3, message: 'Hi, how are you?', likes: 32},        {id: 4, message: 'It`s my first post', likes: 81},        {id: 5, message: 'Hello, glad to see you', likes: 22}    ],    newPostText: 'New Text Post',    profile: null};const profileReducer = (state = initialState, action) => {    // let stateCopy = {...state};    // if (action.type === ADD_POST) {    //     let post = {    //         id: 6,    //         message: state.newPostText,    //         likes: 0    //     };    //     stateCopy.posts = [...stateCopy.posts];    //     stateCopy.posts.push(post);    //     stateCopy.newPostText = '';    // } else if (action.type === ADD_TEXT) {    //     stateCopy.newPostText = action.text;    // }    // return stateCopy    switch (action.type) {        case ADD_POST: {            let post = {                id: 6,                message: state.newPostText,                likes: 0            };            return {                ...state,                posts: [...state.posts, post],                newPostText: ''            };        }        case ADD_TEXT: {             return  {                ...state,                newPostText: action.text            };        }        case SET_USER_PROFILE: {            return  {                ...state,                profile: action.user            };        }        default:            return state    }};export const addPostActionCreator = () => ({type: ADD_POST});export const newTextActionCreator = (text) => ({type: ADD_TEXT, text: text});export const setUserProfile = (user) => ({type: SET_USER_PROFILE, user})export const getUserProfile = (userId) => (dispatch) => {    usersAPI.getProfile(userId)        .then(responce => {            dispatch(setUserProfile(responce.data))        });}export default profileReducer